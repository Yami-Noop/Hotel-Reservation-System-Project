package netBeans;

import java.time.LocalDate;
import java.time.format.DateTimeParseException;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import java.awt.*;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;



/**
 *
 * @author X-COMPUTER
 */
public class AddUpDelCustomerFrame extends javax.swing.JFrame {

        RoomManager customer = new RoomManager();
    /**
     * Creates new form AddRoomFrame
     */
    public AddUpDelCustomerFrame() {

        initComponents();
        setLocationRelativeTo(null); // center on screen
        setResizable(false);
        getContentPane().setBackground(new java.awt.Color(0x123456)); // black background
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Add customer");
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Cutomer id:");
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Cutomer name:");
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setText("Check-in:");
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("Check-out:");
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));

        jButton2.setText("Add customer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Cutomer name:");
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        
        jLabel8.setText("Phone number:");
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));

        jLabel9.setText("Check-in:");
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));

        jLabel10.setText("Check-out:");
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));

        jLabel11.setText("Update customer");
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));

        jButton1.setText("Update customer");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Delete customer");
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));

        jLabel13.setText("Cutomer id:");
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));

        jButton3.setText("Delete room");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel14.setText("Cutomer id:");
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));

        jLabel15.setText("Phone number:");
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(253, 253, 253))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(196, 196, 196))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(172, 172, 172))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(250, Short.MAX_VALUE)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(117, 117, 117)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(39, 39, 39)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel6)
                .addGap(31, 31, 31)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(424, Short.MAX_VALUE)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(255, 255, 255)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
    // Get input values from text fields
    String customerIdText = jTextField10.getText().trim();
    String newName = jTextField7.getText().trim();
    String newCheckIn = jTextField5.getText().trim();
    String newCheckOut = jTextField8.getText().trim();
    String newPhone = jTextField11.getText().trim();
    
    // Validate required fields
    if (customerIdText.isEmpty() || newName.isEmpty() || 
        newCheckIn.isEmpty() || newCheckOut.isEmpty() || 
        newPhone.isEmpty()) {
        JOptionPane.showMessageDialog(this,
            "Please fill in all fields",
            "Missing Information",
            JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        int customerId = Integer.parseInt(customerIdText);
        
        // Validate dates
        if (!isValidDate(newCheckIn) || !isValidDate(newCheckOut)) {
            JOptionPane.showMessageDialog(this,
                "Dates must be in valid yyyy-MM-dd format",
                "Invalid Date",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Validate phone
        if (!isValidPhone(newPhone)) {
            JOptionPane.showMessageDialog(this,
                "Phone must start with 01 and be 11 digits",
                "Invalid Phone",
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Parse dates
        LocalDate checkInDate = LocalDate.parse(newCheckIn);
        LocalDate checkOutDate = LocalDate.parse(newCheckOut);
        
        // Validate check-out after check-in
        if (!checkOutDate.isAfter(checkInDate)) {
            JOptionPane.showMessageDialog(this,
                "Check-out date must be after check-in date",
                "Invalid Dates",
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Use the file-based update approach
        String result = updateCustomerInFile(customerId, newName, checkInDate, checkOutDate, newPhone);
        
        if (result.startsWith("Customer updated")) {
            // Show success message
            JOptionPane.showMessageDialog(this,
                result + "\n\n" +
                "Updated Details:\n" +
                "ID: " + customerId + "\n" +
                "Name: " + newName + "\n" +
                "Check-in: " + newCheckIn + "\n" +
                "Check-out: " + newCheckOut + "\n" +
                "Phone: " + newPhone,
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
            
            // Clear fields
            jTextField10.setText("");
            jTextField7.setText("");
            jTextField5.setText("");
            jTextField8.setText("");
            jTextField11.setText("");
        } else {
            JOptionPane.showMessageDialog(this,
                result,
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }
        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this,
            "Customer ID must be a number",
            "Invalid Input",
            JOptionPane.ERROR_MESSAGE);
    } catch (DateTimeParseException e) {
        JOptionPane.showMessageDialog(this,
            "Invalid date format",
            "Error",
            JOptionPane.ERROR_MESSAGE);
    }
}

private String updateCustomerInFile(int id, String name, LocalDate checkin, LocalDate checkout, String phone) {
    File originalFile = new File("D:\\designs\\testPlProject3\\customers.txt");
    File tempFile = new File("D:\\designs\\testPlProject3\\customers_temp.txt");
    boolean found = false;

    try (
        Scanner scan = new Scanner(originalFile);
        BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile))
    ) {
        while (scan.hasNextLine()) {
            String line = scan.nextLine();
            String[] data = line.split(",");

            int currentId = Integer.parseInt(data[0].trim());
            if (currentId == id) {
                found = true;
                // Check name uniqueness
                if (!name.equalsIgnoreCase(data[1].trim()) && 
                    isNameExistsInFile(name, originalFile)) {
                    return "Name '" + name + "' already exists";
                }
                // Check phone uniqueness
                if (!phone.equals(data[4].trim()) && 
                    isPhoneExistsInFile(phone, originalFile)) {
                    return "Phone number '" + phone + "' already exists";
                }
                
                String newLine = id + "," + name.trim() + "," + checkin + "," + checkout + "," + phone.trim();
                writer.write(newLine + System.lineSeparator());
            } else {
                writer.write(line + System.lineSeparator());
            }
        }
    } catch (IOException e) {
        return "Error processing file: " + e.getMessage();
    }

    if (!found) {
        tempFile.delete(); 
        return "Customer with ID " + id + " not found.";
    }

    if (!originalFile.delete()) {
        return "Failed to delete original file.";
    }

    if (!tempFile.renameTo(originalFile)) {
        return "Failed to rename temp file.";
    }

    return "Customer updated successfully.";
}

private boolean isNameExistsInFile(String name, File file) {
    try (Scanner scan = new Scanner(file)) {
        while (scan.hasNextLine()) {
            String[] data = scan.nextLine().split(",");
            if (data.length > 1 && name.equalsIgnoreCase(data[1].trim())) {
                return true;
            }
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
    return false;
}

private boolean isPhoneExistsInFile(String phone, File file) {
    try (Scanner scan = new Scanner(file)) {
        while (scan.hasNextLine()) {
            String[] data = scan.nextLine().split(",");
            if (data.length > 4 && phone.equals(data[4].trim())) {
                return true;
            }
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
    return false;
}

// Helper methods
private boolean isValidDate(String date) {
    try {
        LocalDate.parse(date);
        return true;
    } catch (DateTimeParseException e) {
        return false;
    }
}

private boolean isValidPhone(String phone) {
    return phone.matches("01\\d{9}");
}


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
    String idText = jTextField1.getText().trim();
    String name = jTextField2.getText().trim();
    String checkInText = jTextField3.getText().trim();
    String checkOutText = jTextField4.getText().trim();
    String phoneNumber = jTextField6.getText().trim();

    if (name.isEmpty() || idText.isEmpty() || checkInText.isEmpty() || checkOutText.isEmpty() || phoneNumber.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please fill in all fields.", "Missing Information", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        int id = Integer.parseInt(idText);
        LocalDate checkIn = LocalDate.parse(checkInText);
        LocalDate checkOut = LocalDate.parse(checkOutText);

        if (!customer.validatePhoneNumber(phoneNumber)) {
            JOptionPane.showMessageDialog(null, "Please enter a valid phone number.", "Invalid Phone Number", JOptionPane.ERROR_MESSAGE);
            return;
        }

        boolean registered = customer.registerCustomer(name, id, checkIn, checkOut, phoneNumber);
        if (registered) {
            JOptionPane.showMessageDialog(null, "You've been registered successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            Window window = SwingUtilities.getWindowAncestor((Component) evt.getSource());
            if (window != null) {
                window.dispose();
            }
        }

    } catch (NumberFormatException | DateTimeParseException ex) {
        JOptionPane.showMessageDialog(null, "ID must be a number, and dates must be in yyyy-MM-dd format.", "Input Error", JOptionPane.ERROR_MESSAGE);
    }
}

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
    String customerIdText = jTextField9.getText().trim();
    
    if (customerIdText.isEmpty()) {
        JOptionPane.showMessageDialog(this,
            "Please enter a customer ID",
            "Missing Information",
            JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        int customerId = Integer.parseInt(customerIdText);
        
        // Confirm deletion
        int confirm = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to permanently delete customer with ID " + customerId + "?",
            "Confirm Deletion",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE);
        
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }
        
        // Perform deletion
        CustomerManager manager = new CustomerManager();
        String result = manager.deleteCustomer(customerId);
        
        if (result.startsWith("Customer deleted")) {
            JOptionPane.showMessageDialog(this,
                result,
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
            
            // Clear the ID field and refresh any displays
            jTextField9.setText("");
            // refreshCustomerList(); // Add this method if needed
        } else {
            JOptionPane.showMessageDialog(this,
                result,
                "Deletion Failed",
                JOptionPane.ERROR_MESSAGE);
        }
        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this,
            "Customer ID must be a valid number",
            "Invalid Input",
            JOptionPane.ERROR_MESSAGE);
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUpDelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUpDelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUpDelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUpDelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddUpDelCustomerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
