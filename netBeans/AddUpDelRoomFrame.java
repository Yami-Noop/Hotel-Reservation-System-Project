package netBeans;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import javax.swing.JOptionPane;

/**
 *
 * @author X-COMPUTER
 */
public class AddUpDelRoomFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddRoomFrame
     */
    public AddUpDelRoomFrame() {
        initComponents();
        setLocationRelativeTo(null); // center on screen
        setResizable(false);
        getContentPane().setBackground(new java.awt.Color(0x123456)); // black background
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Add room");
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Room id:");
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Room type:");
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setText("Room price:");
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("Customer id (-1 if none):");
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));

        jButton2.setText("Add room");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Room price:");
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setText("Room status:");
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));

        jLabel9.setText("Room type:");
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));

        jLabel10.setText("Customer id (-1 if none):");
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));

        jLabel11.setText("Update room");
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));


        jButton1.setText("Update room");
                jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Delete room");
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));

        jLabel13.setText("Room id:");
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        
        jButton3.setText("Delete room");

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel14.setText("Room id:");
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(jTextField1))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(164, 164, 164))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(196, 196, 196))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(39, 39, 39)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(31, 31, 31)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
// 1. The main update method called by your button
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                        
    // Get input values
    String roomIdText = jTextField10.getText().trim();
    String roomType = jTextField7.getText().trim();
    String priceText = jTextField5.getText().trim();
    String customerId = jTextField8.getText().trim();
    String roomStatus = jTextField6.getText().trim();

    try {
        // Validate inputs
        validateRoomInputs(roomIdText, roomType, priceText, customerId, roomStatus);
        
        // Parse inputs
        int roomId = Integer.parseInt(roomIdText);
        int price = Integer.parseInt(priceText);
        boolean isReserved = parseReservationStatus(roomStatus);
        
        // Process customer ID
        customerId = processCustomerId(customerId, isReserved);
        
        // Perform update
        boolean success = updateOrDeleteRoom(roomId, roomType, price, customerId, isReserved, true);
        
        // Handle result
        if (success) {
            showSuccessMessage("Room updated successfully");
            clearUpdateFields();
        } else {
            showErrorMessage("Room not found or update failed");
        }
    } catch (IllegalArgumentException e) {
        showErrorMessage(e.getMessage());
    } catch (Exception e) {
        showErrorMessage("System error: " + e.getMessage());
        e.printStackTrace();
    }
}

// 2. Input validation method
private void validateRoomInputs(String roomId, String roomType, String price, 
                              String customerId, String roomStatus) {
    // Check empty fields
    if (roomId.isEmpty() || roomType.isEmpty() || price.isEmpty() || roomStatus.isEmpty()) {
        throw new IllegalArgumentException("All fields are required");
    }
    
    // Validate number formats
    if (!roomId.matches("\\d+") || !price.matches("\\d+")) {
        throw new IllegalArgumentException("Room ID and Price must be numbers");
    }
    
    // Validate positive numbers
    if (Integer.parseInt(roomId) < 1 || Integer.parseInt(price) < 1) {
        throw new IllegalArgumentException("Room ID and Price must be positive");
    }
    
    // Validate room type length
    if (roomType.length() > 50) {
        throw new IllegalArgumentException("Room type cannot exceed 50 characters");
    }
    
    // Validate status format
    if (!roomStatus.matches("(?i)true|false|reserved|available")) {
        throw new IllegalArgumentException("Status must be true/false or reserved/available");
    }
}

// 3. Parse reservation status
private boolean parseReservationStatus(String status) {
    return status.equalsIgnoreCase("true") || status.equalsIgnoreCase("reserved");
}

// 4. Process customer ID based on reservation status
private String processCustomerId(String customerId, boolean isReserved) {
    if (isReserved) {
        if (customerId.isEmpty() || !customerId.matches("\\d+")) {
            throw new IllegalArgumentException("Reserved rooms require valid customer ID");
        }
        return customerId;
    }
    return "-1"; // Default for non-reserved rooms
}

// 5. Core update/delete method
public static boolean updateOrDeleteRoom(int roomId, String roomType, int price, 
                                       String customerId, boolean isReserved, boolean isUpdate) {
    List<String> rooms = readRooms();
    List<String> updatedRooms = new ArrayList<>();
    boolean found = false;

    for (String room : rooms) {
        String[] parts = room.split(",");
        if (parts.length >= 5 && Integer.parseInt(parts[0].trim()) == roomId) {
            found = true;
            if (isUpdate) {
                String updatedRoom = String.format("%d,%b,%s,%d,%s", 
                    roomId, isReserved, roomType, price, customerId);
                updatedRooms.add(updatedRoom);
            }
        } else {
            updatedRooms.add(room);
        }
    }

    if (!found) return false;

    return writeRooms(updatedRooms);
}

// 6. File reading helper
private static List<String> readRooms() {
    List<String> rooms = new ArrayList<>();
    try (Scanner scanner = new Scanner(new File("rooms.txt"))) {
        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().trim();
            if (!line.isEmpty()) rooms.add(line);
        }
    } catch (FileNotFoundException e) {
        System.err.println("Rooms file not found: " + e.getMessage());
    }
    return rooms;
}

// 7. File writing helper
private static boolean writeRooms(List<String> rooms) {
    try (PrintWriter writer = new PrintWriter(new FileWriter("rooms.txt"))) {
        for (String room : rooms) {
            writer.println(room);
        }
        return true;
    } catch (IOException e) {
        System.err.println("Error writing rooms: " + e.getMessage());
        return false;
    }
}

// 8. UI helper methods
private void showSuccessMessage(String message) {
    JOptionPane.showMessageDialog(this, message, "Success", JOptionPane.INFORMATION_MESSAGE);
}

private void showErrorMessage(String message) {
    JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
}

private void clearUpdateFields() {
    jTextField10.setText("");
    jTextField7.setText("");
    jTextField5.setText("");
    jTextField8.setText("");
    jTextField6.setText("Available"); // Reset to default
}


private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
    // Get input values from text fields
    String roomIdText = jTextField1.getText().trim();
    String roomType = jTextField2.getText().trim();
    String priceText = jTextField3.getText().trim();
    String customerId = jTextField4.getText().trim();

    // Validate required fields
    if (roomIdText.isEmpty() || roomType.isEmpty() || priceText.isEmpty() || customerId.isEmpty()) {
        JOptionPane.showMessageDialog(this,
            "Please fill in all fields",
            "Missing Information",
            JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        // Parse inputs
        int roomId = Integer.parseInt(roomIdText);
        int price = Integer.parseInt(priceText);

        // Validate inputs
        if (price <= 0) {
            JOptionPane.showMessageDialog(this,
                "Price must be a positive number",
                "Invalid Input",
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Create RoomManager instance
        RoomManagerPersistent roomManager = new RoomManagerPersistent();
        
        // Call the addRoom method
        String result = roomManager.addRoom(roomId, roomType, price, customerId);

        // Show appropriate message
        if (result.startsWith("Room added")) {
            JOptionPane.showMessageDialog(this,
                result,
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
            
            // Clear fields after successful addition
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
        } else {
            JOptionPane.showMessageDialog(this,
                result,
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this,
            "Room ID and Price must be numbers",
            "Invalid Input",
            JOptionPane.ERROR_MESSAGE);
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this,
            "Error saving room data: " + e.getMessage(),
            "File Error",
            JOptionPane.ERROR_MESSAGE);
    }
}

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
    String roomIdText = jTextField9.getText().trim();
    
    if (roomIdText.isEmpty()) {
        JOptionPane.showMessageDialog(this,
            "Please enter a room ID",
            "Missing Information",
            JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        int roomId = Integer.parseInt(roomIdText);
        
        // Confirm deletion
        int confirm = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to delete room with ID " + roomId + "?",
            "Confirm Deletion",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE);
        
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }
        
        // Perform deletion
        RoomManagerPersistent roomManager = new RoomManagerPersistent();
        String result = roomManager.deleteRoom(roomId);
        
        if (result.startsWith("Room deleted")) {
            JOptionPane.showMessageDialog(this,
                result,
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
            jTextField9.setText(""); // Clear the ID field
        } else {
            JOptionPane.showMessageDialog(this,
                result,
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }
        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this,
            "Room ID must be a number",
            "Invalid Input",
            JOptionPane.ERROR_MESSAGE);
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this,
            "Error processing file: " + e.getMessage(),
            "File Error",
            JOptionPane.ERROR_MESSAGE);
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUpDelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUpDelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUpDelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUpDelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddUpDelRoomFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
